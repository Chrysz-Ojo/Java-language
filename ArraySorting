class Solution {
    public int[] relativeSortArray(int[] arr1, int[] arr2) {
        Map<Integer, Integer> relativePositions = new HashMap<>();
        for (int i = 0; i < arr2.length; i++) {
            relativePositions.put(arr2[i], i);
        }

        // Count the occurrences of elements in arr1
        int[] counts = new int[1001];
        for (int num : arr1) {
            counts[num]++;
        }

        // Fill arr1 with elements based on their relative positions in arr2
        int index = 0;
        for (int num : arr2) {
            while (counts[num] > 0) {
                arr1[index++] = num;
                counts[num]--;
            }
        }

        // Fill arr1 with remaining elements in ascending order
        for (int i = 0; i < counts.length; i++) {
            while (counts[i] > 0) {
                arr1[index++] = i;
                counts[i]--;
            }
        }

        return arr1;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] arr1 = {2, 3, 1, 3, 2, 4, 6, 7, 9, 2, 19};
        int[] arr2 = {2, 1, 4, 3, 9, 6};

        int[] sortedArr = solution.relativeSortArray(arr1, arr2);
        System.out.println(Arrays.toString(sortedArr));
    }
}
